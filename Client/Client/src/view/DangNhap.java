/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import Model.DocGia;
import Model.TaiKhoan;
import controller.ClientCtr;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import run.ClientRun;

/**
 *
 * @author Admin
 */
public class DangNhap extends javax.swing.JFrame implements ActionListener {

    private List<DocGia> docGias;

    private ClientCtr clientCtr;
    private ClientRun clientRun;

    /**
     * Creates new form DangNhap
     */
    public DangNhap() {
        initComponents();
        addActionListener();
        setLocationRelativeTo(null);
        docGias = new ArrayList<>();
        clientCtr = new ClientCtr();
        loadData();
        URL url = this.getClass().getResource("dmtl.png");
        Image img = Toolkit.getDefaultToolkit().createImage(url);
        this.setIconImage(img);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txttendangnhap = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        btndangnhap = new javax.swing.JButton();
        btndangxuat = new javax.swing.JButton();
        btndangky = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐĂNG NHẬP THÔNG TIN TÀI KHOẢN");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ĐĂNG NHẬP");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Tên Đăng Nhập");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 105, 31));

        txttendangnhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txttendangnhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 230, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Mật Khẩu");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 99, 24));

        txtpassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 230, -1));

        btndangnhap.setBackground(new java.awt.Color(0, 102, 102));
        btndangnhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndangnhap.setForeground(new java.awt.Color(255, 255, 255));
        btndangnhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login1.png"))); // NOI18N
        btndangnhap.setText("Đăng Nhập");
        getContentPane().add(btndangnhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 130, -1));

        btndangxuat.setBackground(new java.awt.Color(0, 102, 102));
        btndangxuat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndangxuat.setForeground(new java.awt.Color(255, 255, 255));
        btndangxuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/log out.png"))); // NOI18N
        btndangxuat.setText("Đăng Xuất");
        getContentPane().add(btndangxuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 130, -1));

        btndangky.setBackground(new java.awt.Color(0, 102, 102));
        btndangky.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndangky.setForeground(new java.awt.Color(255, 255, 255));
        btndangky.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dangki.png"))); // NOI18N
        btndangky.setText("Đăng Ký");
        getContentPane().add(btndangky, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 120, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nen2.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DangNhap().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndangky;
    private javax.swing.JButton btndangnhap;
    private javax.swing.JButton btndangxuat;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txttendangnhap;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        var obj = e.getSource();
        if (obj.equals(btndangnhap)) {
            dangnhap();

        } else if (obj.equals(btndangxuat)) {
            this.dispose();
         ClientRun.a.setVisible(true);
        } else if (obj.equals(btndangky)) {
            DangKyDocGia dk = new DangKyDocGia(this, true, docGias);
            dk.setVisible(true);
        }  

    }

    private void addActionListener() {
        btndangnhap.addActionListener(this);
        btndangxuat.addActionListener(this);
        btndangky.addActionListener(this);      
    }

    private void dangnhap() {
        var a = txttendangnhap.getText().trim();
        var b = String.valueOf(txtpassword.getPassword()).trim();
        if (a.isEmpty() || b.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập đầy đủ thông tin!");
        } else {
            var taikhoan = new TaiKhoan(a, b);
            clientCtr.moSocket();
            clientCtr.guiTaiKhoan(taikhoan);
            String res = clientCtr.nhanketqua().trim();
            if (res.compareToIgnoreCase("Mở") == 0) {
                JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công!");
                dispose();
                ClientRun.a.dispose();
                int ma = clientCtr.nhanmabandoc();               
                var l = new TrangChuDocGia(ma);                
                l.setVisible(true);
                txtpassword.setText("");
                txttendangnhap.setText("");
            } else if (res.compareToIgnoreCase("Khoá") == 0) {
                JOptionPane.showMessageDialog(rootPane, "Tài khoản của bạn đang bị khoá\n"
                        + "Vui lòng liên hệ thư viện để kiểm tra!");

            } else if (res.compareToIgnoreCase("Thất bại") == 0){
                JOptionPane.showMessageDialog(rootPane, "Đăng nhập thất bại.\nVui lòng kiểm tra lại!");
                txtpassword.setText("");
                txttendangnhap.setText("");
                txttendangnhap.requestFocus();
            }
            clientCtr.dongketnoi();
        }

    } 
    private void loadData() {
        clientCtr.moSocket();
        clientCtr.guiyeucau("oki");
        docGias = clientCtr.nhandanhsachbandoc();
        editMaBanDoc();
        clientCtr.dongketnoi();
    }

    void addDocgiaCallBack(DocGia banDoc) {
        docGias.add(banDoc);
        clientCtr.moSocket();
        clientCtr.guiDocgia(banDoc);
        clientCtr.dongketnoi();
    }

    private void editMaBanDoc() {
        var maxId = DocGia.getsId();
        for (DocGia s : docGias) {
            if (s.getMaDocGia() > maxId) {
                maxId = s.getMaDocGia();
            }
        }
        DocGia.setsId(maxId + 1);
    }
}
//    private void disAble() {
//        //var c = comboitem.getSelectedItem().toString();
//        btndangky.setEnabled(false);
//        btndangnhap.setEnabled(false);
//        btndangxuat.setEnabled(false);
////        if(c.equals("Thủ Thư")){
////         btndangnhap.setEnabled(true);
////        btndangxuat.setEnabled(true);
////}
////       else if(c.equals("Độc Giả")){
////        btndangky.setEnabled(true);
////        btndangnhap.setEnabled(true);
////        btndangxuat.setEnabled(true);
////        }
//    }
//    private void setcombo() {
//        var a = comboitem.getSelectedItem().toString();
//        if(a.equals("Thủ Thư")){
//         btndangnhap.setEnabled(true);
//          btndangky.setEnabled(false);
//        btndangxuat.setEnabled(true);
//        }
//        else if(a.equals("Độc Giả")){
//        btndangnhap.setEnabled(true);
//          btndangky.setEnabled(true);
//        btndangxuat.setEnabled(true);
//        }
//    }
  //  private void kiemtradangnhap() {
//        var a = txttendangnhap.getText();
//        var b = String.valueOf(txtpassword.getPassword());
//        var c = comboitem.getSelectedItem().toString();
//        var taikhoan = new TaiKhoan(a, b);
//        if (a.isEmpty() || b.isEmpty()) {
//            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập đủ thông tin!");
//        } else {
//            if (c.equals("Thủ Thư")) {
//
//                if (kiemtrathuthu(taikhoan)) {
//                    JOptionPane.showMessageDialog(rootPane,
//                            "Bạn đã đăng nhập thành công với vai trò Thủ Thư!");
//
//                    new TrangChuThuThu().setVisible(true);
//                    this.dispose();
//                    //new Home().dispose();
//                    txtpassword.setText("");
//                    txttendangnhap.setText("");
//
//                } else {
//                    JOptionPane.showMessageDialog(rootPane,
//                            "Đăng nhập thất bại!\n Vui lòng kiểm tra lại!");
//                    txtpassword.setText("");
//                    txttendangnhap.setText("");
//                    txttendangnhap.requestFocus();
//
//                }
//            } else if (c.compareToIgnoreCase("Độc Giả") == 0) {
//
//                if (kiemtradocgia(taikhoan)) {
//                    JOptionPane.showMessageDialog(rootPane,
//                            "Bạn đã đăng nhập thành công với vai trò Độc giả!");
//                    dispose();
//                    var m = KetNoiSql.laymadocgia(a, b);
//                    var l = new TrangChuDocGia(m);
//                    l.setVisible(true);
//
//                    txtpassword.setText("");
//                    txttendangnhap.setText("");
//
//                } else {
//                    JOptionPane.showMessageDialog(rootPane,
//                            "Đăng nhập thất bại!\n Vui lòng kiểm tra lại!");
//                    txtpassword.setText("");
//                    txttendangnhap.setText("");
//                    txttendangnhap.requestFocus();
//
//                }
////       
//
//            }
//        }
//    }
//      

