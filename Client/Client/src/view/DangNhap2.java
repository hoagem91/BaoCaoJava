/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Controller.DATACONTROLLER;
import Controller.DataControllerImp;
import Model.ChiTietPhieuMuon;
import Model.DocGia;
import Model.PhieuMuon;
import Model.TaiLieu;
import controller.ClientCtr;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import run.ClientRun;

/**
 *
 * @author Admin
 */
public class DangNhap2 extends javax.swing.JPanel implements ActionListener{

    /**
     * Creates new form TaoPhieuMuon
     */
    
//    private DefaultTableModel tableModeltailieumuon;    
//    private List<TaiLieu> taiLieus;   
//    private List<TaiLieu> tailieumuons;
//    private PhieuMuon phieuMuon;
//    private List<PhieuMuon> phieuMuons;  
//    private List<ChiTietPhieuMuon> chiTietPhieuMuons;  
//    private DocGia docGia1;
//    private ClientCtr clientCtr;
//    private DATACONTROLLER dataControllerImp;
    public DangNhap2() {
        initComponents();
//        dataControllerImp = new DataControllerImp();
//        clientCtr = new ClientCtr();       
       addactionlistener();
//        chiTietPhieuMuons = new ArrayList<>();
//        tailieumuons = new ArrayList<>();      
//        phieuMuon = new PhieuMuon();
//        phieuMuons = new ArrayList<>();             
//        tableModeltailieumuon = (DefaultTableModel) tblsachduocmuon.getModel();     
//        loadData();
//        showData();
//        txtmaphieu.setText(PhieuMuon.getsId() + "");
//        docGia1 = new DocGia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btndangnhap = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("        Hướng dẫn đăng nhập:\n           +) Nhấn vào nút đăng nhập phía bên dưới màn hình.\n           +) Lúc này, một form  đăng nhập sẽ hiển thị ra.\n           +) Nếu bạn chưa có tài khoản, hãy nhấn vào nút đăng ký để tạo tài khoản mới nhé!\n           +) Nếu bạn đã có tài khoản, hãy điền đầy đủ thông tin tên đăng nhập, mật khẩu vào ô tương ứng, sau đó nhấn nút đăng nhập để truy cập vào hệ thống!");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        btndangnhap.setBackground(new java.awt.Color(0, 102, 102));
        btndangnhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndangnhap.setForeground(new java.awt.Color(255, 255, 255));
        btndangnhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login1.png"))); // NOI18N
        btndangnhap.setText("Đăng nhập");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(307, 307, 307)
                .addComponent(btndangnhap, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(btndangnhap)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndangnhap;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

//    void themvaodanhsachcallback(TaiLieu s) {
//         if (tailieumuons.contains(s)) {
//            JOptionPane.showMessageDialog(getRootPane(), "Bạn đã mượn một tài liệu này rồi\n "
//                    + "Vui lòng chọn tài liệu khác trong thư viện!");
//        } else {
//            tailieumuons.add(s);
//            showtailieumuons();
//            thietlapsosachmuon();
//        }
//    }
//
//    @Override
//    public void actionPerformed(ActionEvent e) {
//        var obj = e.getSource();
//        if (obj.equals(btnxoa)) {
//            xoaSachMuon();
//        } else if (obj.equals(btnxacnhan)) {
//            taoPhieuMuonSach();
//        }
//    }
//
    private void addactionlistener() {
        btndangnhap.addActionListener(this);
    }
//
//    private void xoaSachMuon() {
//          int row = tblsachduocmuon.getSelectedRow();
//        if (row == -1) {
//            JOptionPane.showMessageDialog(getRootPane(),
//                    "Chọn một tài liệu để xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        } else {
//            tableModeltailieumuon.removeRow(row);
//            thietlapsosachmuon();
//        }
//        
//    }
//
//    private void taoPhieuMuonSach() {
//        var maPhieu = txtmaphieu.getText();
//        var hoten = txttendocgia.getText();
//        var maDocGia = txtmadocgia.getText();
//        var sosachmuon = lbsosachmuon.getText();
//        var format = "dd/MM/yyyy ";
//        var date = new Date();
//        SimpleDateFormat dateFormat = new SimpleDateFormat(format);
//        var currentTime = dateFormat.format(date);     
//        var ngaymuon = txtngaymuon.getText();
//        var songaymuon = txtsongaymuon.getText();
//        var trangthai = " Chưa trả";
//
//        if (maPhieu.isEmpty() || hoten.isEmpty() || maDocGia.isEmpty() || sosachmuon.isEmpty()
//                || songaymuon.isEmpty()) {
//            JOptionPane.showMessageDialog(getRootPane(), "Vui lòng kiểm tra lại các thông "
//                    + "  tin trước khi mượn tài liệu!");
//
//        } else {
//            if (Integer.parseInt(sosachmuon) < 0 || Integer.parseInt(sosachmuon) > 3 || Integer.parseInt(songaymuon) > 14) {
//                JOptionPane.showMessageDialog(getRootPane(),
//                        "Vui lòng kiểm tra lại số tài liệu đã mượn và số ngày mượn",
//                        "Thất bại", JOptionPane.ERROR_MESSAGE);
//
//            } else {
//                txtngaymuon.setText(currentTime);
//                var ngaymuon1 = txtngaymuon.getText();
//                try {
//                    PhieuMuon phieuMuon = new PhieuMuon(Integer.parseInt(maPhieu), Integer.parseInt(maDocGia), hoten, dateFormat.parse(ngaymuon1),
//                            Integer.parseInt(songaymuon), Integer.parseInt(sosachmuon), trangthai, " ");
//                    if (phieuMuons.contains(phieuMuon)) {
//                        JOptionPane.showMessageDialog(getRootPane(),
//                                "Phiếu mượn có mã " + maPhieu + " đã tồn tại, vui lòng thay đổi mã phiếu!");
//                    } else {
//                        clientCtr.moSocket();
//                        clientCtr.guiPhieuMuon(phieuMuon);
//                        if (clientCtr.nhanketqua().equals("taophieumuonthanhcong")) {
//                            JOptionPane.showMessageDialog(getRootPane(),
//                                    "Tạo phiếu mượn thành công!");
//                            clientCtr.dongketnoi();
////                            lbmaphieu.setText(maPhieu);
////                            lbmadocgia.setText(maDocGia);
////                            lbtendocgia.setText(hoten);
////                            lbsongaymuon.setText(songaymuon);
////                            lbngaymuon.setText(ngaymuon1);
////                            lbsosachdamuon.setText(sosachmuon);                      
////                            lbtrangthaiphieu.setText(trangthai);
//                           showtailieumuons1();
//                        }
//                        var maphieumuon = Integer.parseInt(maPhieu);
//                        clientCtr.moSocket();
//                        for (int i = 0; i < tableModeltailieumuon.getRowCount(); i++) {
//                            ChiTietPhieuMuon ctpm = new ChiTietPhieuMuon(maphieumuon, String.valueOf(tblsachduocmuon.getValueAt(i, 0)),
//                                    "", "", "");
//                            chiTietPhieuMuons.add(ctpm);
//                        }
//                        clientCtr.guiChiTietPhieuMuons(chiTietPhieuMuons);
//                        clientCtr.dongketnoi();                     
//
//                    }
//
//                } catch (ParseException ex) {
//                }
//            }
//
//        }
//    }
//
//    private void loadData() {
//         clientCtr.moSocket();
//        clientCtr.guiyeucau("okk");             
//        phieuMuons = clientCtr.nhandanhsachphieumuon(); 
//         taiLieus = clientCtr.nhandanhsachtailieu();
//        editmaPhieuMuon();
//        clientCtr.dongketnoi();      
//    }
//
//    private void showData() {
//        
//        
//    }
//
//    private void editmaPhieuMuon() {
//         var maxId = PhieuMuon.getsId();
//        for (PhieuMuon s : phieuMuons) {
//            if (s.getMaPM() > maxId) {
//                maxId = s.getMaPM();
//            }
//
//        }
//        PhieuMuon.setsId(maxId + 1);
//    }
//
//    private void showtailieumuons() {
//         tableModeltailieumuon.setRowCount(0);
//        for (TaiLieu sachmuon : tailieumuons) {
//            showsachmuon(sachmuon);
//        }
//    }
//
//    private void thietlapsosachmuon() {
//        var a = tableModeltailieumuon.getRowCount();
//        //var c = lbgioihan.getText();
//        lbsosachmuon.setText(String.valueOf(a));
//        if (a > 3) {
//            lbsosachmuon.setForeground(Color.red);
//            JOptionPane.showMessageDialog(getRootPane(), "Bạn đã mượn quá "
//                    + "  số tài liệu cho phép của thư viện!");
//        } else {
//            lbsosachmuon.setForeground(Color.BLACK);
//        }
//    }
//
//    private void showsachmuon(TaiLieu s) {
//          var row = new Object[]{s.getMatl(), s.getTentl(),
//            s.getMadanhmuc(), s.getTacGia(), s.getManxb(), String.valueOf(s.getNamXuatBan())};
//        tableModeltailieumuon.addRow(row);
//    }
//
//    private void showtailieumuons1() {
////          tableModelthongtinpm.setRowCount(0);
////        for (TaiLieu sachmuon : tailieumuons) {
////            showsachmuon1(sachmuon);
////        }
//    }

    @Override
    public void actionPerformed(ActionEvent e) {
        var obj = e.getSource();
        if(obj.equals(btndangnhap)){         
        ClientRun.a.dispose();
        new DangNhap().setVisible(true);}
    }
}
